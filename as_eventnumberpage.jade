doctype html
html
  title Log analysis
  head
    meta#aa(name='description',content="#{JSON.stringify(eventArr)}")
    style(type='text/css').
      <!--
      .divshowid{
      text-align:center;
      color:#83AF9B;
      }
      .div4analysisbtn{
      text-align:center;
      font-size:30px;
      color:#83AF9B;
      }
      .div4welcome{
      margin: 50px 0px 0px 20px;
      text-align:center;
      font-size:100px;
      color:#83AF9B;
      }
      .div4input{
      text-align:center;
      }
      .div4ahref{
      margin: 10px 0px 0px 10px;
      text-align:center;
      color:#D8D8D8;
      }
      a:link {color: #A4A4A4; font-size: 9pt}
      a:visited {color : #A4A4A4; font-size: 9pt}
      a:hover {color : black; font-size: 9pt}
      a:active {color : #A4A4A4; font-size: 9pt}
      //-->
    link(href='https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.css', rel='stylesheet')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.js')
    script(type='text/javascript').
      var eventArray=new Array();
      onReady('#chart', function() {
      var first=['x', '00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00',
      '10:00', '11:00', '12:00', '13:00', '14:00', '15:00','16:00', '17:00', '18:00', '19:00', '20:00',
      '21:00', '22:00', '23:00'];
      var data=document.getElementById("aa");
      var data4event=data.content;
      var rmstr=data4event.replace(/\[|\]/gi,"");
      var tokenArray=rmstr.split(",");
      eventArray.push(first);
      for(var i=0;i<(tokenArray.length/25);i++){
           var arr_sub = new Array();
           for(var j=0;j<25;j++){
             arr_sub.push(tokenArray[(i*25)+j]);
           }
           eventArray.push(arr_sub);
      }
      var chart = c3.generate({
      data: {
      x: 'x',
      xFormat: '%H:%M',
      columns: eventArray
      },
      axis: {
      x: {
      type: 'timeseries',
      tick: {
      format: '%H:%M',
      values:['00:00','06:00','12:00','18:00','23:00']
      }
      }
      }
      });
      });
      // Set a timeout so that we can ensure that the `chart` element is created.
      function onReady(selector, callback) {
      var intervalID = window.setInterval(function() {
      if (document.querySelector(selector) !== undefined) {
      window.clearInterval(intervalID);
      callback.call(this);
      }
      }, 500);
      }
  body
    | Welcome -----
    .divshowid
      div 안녕하세요! #{id}님!
    .div4ahref
      a(href='#') Setting | &nbsp;&nbsp;
      a(href='#') Logout
    .div4analysisbtn
      form(method='get')
        button(type='submit',formaction='/analysis',id='btn') Log Analysis
        button(type='submit',formaction='/hackanalysis') Hacking  Analysis
    .div4welcome
      span
        | Log analysis!
    .div4input
      form(method='get')
        button(type='button')   Event  number  
        button(type='button',onclick="show_ip()")    IP  Analysis  
        button(type='button',onclick="show_proto()") Protocol Analysis
        button(type='button',onclick="show_page()")  Page  Analysis  
        button(type='button',onclick="show_status()")  Status Analysis
        br
        br
        br
        br
    #chart
    .div4ahref
      a(href='#',onclick="save_csv()") Save as ".csv"
script.
    function save_csv() {
      exportToCsv('eventnumber.csv', eventArray);
      return false;
    }
    function show_ip() {
        window.location.href = '/analysis_ip';
        return false;
    }
    function show_proto() {
        window.location.href = '/analysis_proto';
        return false;
    }
    function show_page() {
        window.location.href = '/analysis_page';
        return false;
    }
    function show_status() {
        window.location.href = '/analysis_status';
        return false;
    }
    function exportToCsv(filename, rows) {
        var processRow = function (row) {
            var finalVal = '';
            for (var j = 0; j < row.length; j++) {
                var innerValue = row[j] === null ? '' : row[j].toString();
                if (row[j] instanceof Date) {
                    innerValue = row[j].toLocaleString();
                };
                var result = innerValue.replace(/"/g, '""');
                if (result.search(/("|,|\n)/g) >= 0)
                    result = '"' + result + '"';
                if (j > 0)
                    finalVal += ',';
                finalVal += result;
            }
            return finalVal + '\n';
        };

        var csvFile = '';
        for (var i = 0; i < rows.length; i++) {
            csvFile += processRow(rows[i]);
        }
        var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });
        if (navigator.msSaveBlob) { // IE 10+
            navigator.msSaveBlob(blob, filename);
        } else {
            var link = document.createElement("a");
            if (link.download !== undefined) { // feature detection
                // Browsers that support HTML5 download attribute
                var url = URL.createObjectURL(blob);
                link.setAttribute("href", url);
                link.setAttribute("download", filename);
                link.style.visibility = 'hidden';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                }
         }
    }