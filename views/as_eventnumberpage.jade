doctype html
html
  title Log analysis
  head
    meta#aa(name='description',content="#{JSON.stringify(eventArr)}")
    style.
      html { font-size: 62.5%; }
      body { font-size: 1em;}
      @media (max-width: 300px) {
      html { font-size: 70%; }
      }
      @media (min-width: 500px) {
      html { font-size: 80%; }
      }
      @media (min-width: 700px) {
      html { font-size: 120%; }
      }
      @media (min-width: 1200px) {
      html { font-size: 200%; }
      }
      #container {
      margin: 5px;
      height: 100%;
      }
      html, body {
      height: 100%;
      }
      #header {
      height: 10%;
      }
      #medium {
      width:50%
      height: 10%;
      float:left;
      }
      #userinfo {
      height: 100%;
      width:100%
      color:#D8D8D8;
      font-size: 50%;
      }
      #down{
      float: left;
      width: 100%;
      height: 80%;
      }
      #content {
      float: right;
      width: 85%;
      height: 80%;
      text-align: center;
      padding: 40;
      font-size: 50%;
      }
      #logo{
      width: 15%;
      height: 100%;
      float:left;
      }
      #up_menu{
      width: 85%;
      height: 100%;
      float:right;
      }
      img {
      max-width: 100%;
      max-height: 100%;
      }
      ul {
      height: 100%;
      margin: 0;
      padding: 0;
      overflow: hidden;
      background-color: #fed7d6;
      list-style-type: none;
      }
      li {
      height: 100%;
      float: left;
      }
      li a {
      height: 100%;
      display: block;
      font-size: 62.5%;
      color: black;
      font-family: Verdana, sans-serif;
      font-size: .9em;
      text-align: center;
      padding: 12px 16px;
      text-decoration: none;
      }
      li a:hover:not(.active) {
      color: black;
      height: 100%;
      background-color: #FC9D9A;
      }
      .active {
      color: black;
      height: 100%;
      background-color: #FC9D9A;
      }
      #sideinfo {
      float: left;
      width: 15%;
      height: 80%;
      margin: 0px;
      background-color: #fed7d6;
      font-size: .9em;
      }
      #sideinfo a {
      display: block; /* this makes the link look like a block element - we could give it margins, etc. */
      text-decoration: none;
      color: black;
      background-color: #fed7d6;
      margin: 0px;
      width: 100%;
      font-family: Verdana, sans-serif;
      text-align: center;
      }
      #sideinfo a:hover {
      background-color: #FC9D9A;
      }
      #urhere a, #urhere a:hover {
      background-color: #FC9D9A;
      }
    link(href='https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.css', rel='stylesheet')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.js')
    script(type='text/javascript').
      var eventArray=new Array();
      onReady('#chart', function() {
      var first=['x', '00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00',
      '10:00', '11:00', '12:00', '13:00', '14:00', '15:00','16:00', '17:00', '18:00', '19:00', '20:00',
      '21:00', '22:00', '23:00'];
      var data=document.getElementById("aa");
      var data4event=data.content;
      var rmstr=data4event.replace(/\[|\]/gi,"");
      var tokenArray=rmstr.split(",");
      eventArray.push(first);
      for(var i=0;i<(tokenArray.length/25);i++){
           var arr_sub = new Array();
           for(var j=0;j<25;j++){
             arr_sub.push(tokenArray[(i*25)+j]);
           }
           eventArray.push(arr_sub);
      }
      var chart = c3.generate({
      data: {
      x: 'x',
      xFormat: '%H:%M',
      columns: eventArray
      },
      axis: {
      x: {
      type: 'timeseries',
      tick: {
      format: '%H:%M',
      values:['00:00','06:00','12:00','18:00','23:00']
      }
      }
      }
      });
      });
      // Set a timeout so that we can ensure that the `chart` element is created.
      function onReady(selector, callback) {
      var intervalID = window.setInterval(function() {
      if (document.querySelector(selector) !== undefined) {
      window.clearInterval(intervalID);
      callback.call(this);
      }
      }, 500);
      }
  body
    #container
      #header
        #logo
          img(src='https://raw.githubusercontent.com/Shinseulgi/Hanium/master/webla.jpg')               
        #up_menu
          ul
            li
              a.active(href='/analysis') Log Analysis     
            li
              a(href='/hackanalysis') Hacking Analysis       
            li
              a(href='/pre_analysis') History 
      #medium           
        #userinfo 
          br
          | Welcome -----
          .divshowid
           div 안녕하세요! #{id}님!
          br
          a(href='#') Setting | &nbsp;&nbsp;
          a(href='#') Logout
          br
          br
          br
      #down
        #sideinfo
          span#urhere
            a(href='') Event number 
          span
            a(href='/analysis_ip') IP
          span
            a(href='/analysis_proto') Protocol 
          span
            a(href='/analysis_page') Page
          span
            a(href='/analysis_status') Status       
        #content
          br
          br
          br
          br
          #chart
          br
          br
          a(href='#',onclick="save_csv()") Save as ".csv"
script.
    function save_csv() {
      exportToCsv('eventnumber.csv', eventArray);
      return false;
    }
    function exportToCsv(filename, rows) {
        var processRow = function (row) {
            var finalVal = '';
            for (var j = 0; j < row.length; j++) {
                var innerValue = row[j] === null ? '' : row[j].toString();
                if (row[j] instanceof Date) {
                    innerValue = row[j].toLocaleString();
                };
                var result = innerValue.replace(/"/g, '""');
                if (result.search(/("|,|\n)/g) >= 0)
                    result = '"' + result + '"';
                if (j > 0)
                    finalVal += ',';
                finalVal += result;
            }
            return finalVal + '\n';
        };

        var csvFile = '';
        for (var i = 0; i < rows.length; i++) {
            csvFile += processRow(rows[i]);
        }
        var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });
        if (navigator.msSaveBlob) { // IE 10+
            navigator.msSaveBlob(blob, filename);
        } else {
            var link = document.createElement("a");
            if (link.download !== undefined) { // feature detection
                // Browsers that support HTML5 download attribute
                var url = URL.createObjectURL(blob);
                link.setAttribute("href", url);
                link.setAttribute("download", filename);
                link.style.visibility = 'hidden';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                }
         }
    }